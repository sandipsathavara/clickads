<?php

/**
 * BaseLanguages
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $culture
 * @property boolean $is_default
 * @property boolean $status
 * 
 * @method string    getName()       Returns the current record's "name" value
 * @method string    getCulture()    Returns the current record's "culture" value
 * @method boolean   getIsDefault()  Returns the current record's "is_default" value
 * @method boolean   getStatus()     Returns the current record's "status" value
 * @method Languages setName()       Sets the current record's "name" value
 * @method Languages setCulture()    Sets the current record's "culture" value
 * @method Languages setIsDefault()  Sets the current record's "is_default" value
 * @method Languages setStatus()     Sets the current record's "status" value
 * 
 * @package    classifieds
 * @subpackage model
 * @author     Sandip Sathavara <sandip.sathavara@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLanguages extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('languages');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('culture', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_default', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('status', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));

        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}